spring:
  application:
    name: cm-eureka
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
server:
  port: 8000
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接 默认值为8，建议设置每个CPU核心一个线程
    io-threads: ${SERVER_UNDERTOW_IO_THREADS:4}
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程
    # 默认等于 io-threads*8，它的值设置取决于系统的负载，可适当调大该值
    worker-threads: ${SERVER_UNDERTOW_WORKER_THREADS:128}
    # 每块buffer的空间大小，越小空间被利用越充分
    # 不要设置太大，以免影响其他应用，合适即可
    buffer-size: ${SERVER_UNDERTOW_BUFFER_SIZE:1024}
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    # 默认false
    direct-buffers: true
    # HTTP POST请求最大的大小
    # 默认0，无限制，可设置10M
    max-http-post-size: 10485760

eureka:
  instance:
    hostname: localhost
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
    prefer-ip-address: true
    #服务信息
    metadata-map:
      VERSION: 0.0.1
  client:
    # 防止自己注册自己
    register-with-eureka: true
    # 指的是是否在其他节点的注册中心中拿信息,在注册中心集群时注意修改该属性值:true,相当于多个节点注册中心相互同步数据;
    fetch-registry: true
    #查询服务和注册服务于注册中心交互的地址，多个地址用，分割
    service-url:
      defaultZone: http://root:root@127.0.0.1:8000/eureka/,http://root:root@127.0.0.1:9000/eureka/,http://root:root@127.0.0.1:10000/eureka/
    registry-fetch-interval-seconds: 10
    disable-delta: true
  server:
    registry-sync-retry-wait-ms: 0

---

spring:
  profiles: p1
server:
  port: 9000
eureka:
  instance:
    hostname:p1
  client:
    service-url:
      defaultZone: http://root:root@127.0.0.1:9000/eureka/
---

spring:
  profiles: p2
server:
  port: 10000
eureka:
  instance:
    hostname:p2
  client:
    service-url:
      defaultZone: http://root:root@127.0.0.1:10000/eureka/